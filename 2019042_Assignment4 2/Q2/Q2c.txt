Even when the link between B and C is broken, the cost of getting from A to C and B to C continues to rise, despite the fact that we can't get to C from either A or B. This is because, after converging, we will have an entry in A's routing table indicating that we may reach C through B. When this table is shared with B, B can reach C via A. When B's newly updated routing table is shared with A, A changes its table as well, and the process continues. As a result, the cost of getting from A to B to C rises as the number of iterations increases. "Count to infinity" is a well-known name for this problem. This might have been avoided in the first place by preventing B from updating its routing table with information from A for a route that passes via B.

